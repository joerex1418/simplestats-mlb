NOTES:
- broadcast data covers years 2000 - 2022

GENERATE SWAGGER DOCS FROM URL:
BASE:
- https://redocly.github.io/redoc/?url={URL}
Teams:
- https://statsapi.mlb.com/docs/team/swagger.json
Season:
- https://statsapi.mlb.com/docs/season/swagger.json
Person:
- https://statsapi.mlb.com/docs/person/swagger.json

BBREF Redirect URL:
- https://www.baseball-reference.com/redirect.fcgi?player=1&mlb_ID={playerid}

PLAYER POOL VALUES:
    All
    Qualified
    Rookies
    Qualified_rookies

Event Types (formatted for "playLog"/"pitchLog"):
    calledStrike - pitch
    fieldOut
    strikeout
    doublePlay
    groundedIntoDoublePlay

    walk
    single
    double
    triple
    homeRun


For consideration:
    https://statsapi.mlb.com/api/v1/rosterTypes
    https://statsapi.mlb.com/api/v1/teams/145/roster?rosterType=fullRoster
    https://statsapi.mlb.com/api/v1/teams/145/roster?rosterType=allTime
    https://statsapi.mlb.com/api/v1/fielderDetailTypes

    https://statsapi.mlb.com/api/v1/sports/1/players?season=2021
    https://statsapi.mlb.com/api/v1/game/632265/feed/color
    https://statsapi.mlb.com/api/v1.1/game/632265/feed/live/diffPatch?startTimecode=20211003_002205&endTimecode=20211003_002249



class StatsAPI:
    class stats:
        pass

    class people:
        def __new__(cls,mlbam):
            self = object.__new__(cls)
            self.mlbam = mlbam
            return self

        def info(self):
            url = BASE + f"/people/{self.mlbam}"
            resp = requests.get(url)
            return resp.json()

        def stats(self,statType,statGroup,season=None,**kwargs):
            
            if season is not None:
                season = default_season()
            params = {
                "stats":statType,
                "group":statGroup,
                "season":season
            }
            url = BASE + f"/people/{self.mlbam}/stats"
            resp = requests.get(url,params)
            return resp.json()

    class team:
        pass

    class teams:
        pass

    class standings:
        pass
